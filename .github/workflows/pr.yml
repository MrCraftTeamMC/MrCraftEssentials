# Automatically build the project and run any configured tests for every push
# and submitted pull request. This can help catch issues that only occur on
# certain platforms or Java versions, and provides a first line of defence
# against bad commits.

name: Test CI
on:
  pull_request:
  push:
    branches:
      - 'exp/**'
      - 'test/**'
      - 'feat/**'
      - 'fix/**'
#  release:
#    types:
#      - published
  workflow_dispatch:
#    inputs:
#      subproject:
#        description: leave it empty to build all
#        type: string
#        required: false
#        default: ''
  workflow_call:
#    inputs:
#      subproject:
#        description: leave it empty to build all
#        type: string
#        required: false
#        default: ''

jobs:
  build:
    name: Build for testing
    strategy:
      matrix:
        # Use these Java versions
        java: [
          17,    # Current Java LTS & minimum supported by Minecraft
#          21,    # Current Java LTS (Test only)
        ]
        # and run on Linux
        os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}
    if: contains(github.event.head_commit.message, '[build skip]') == false
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
        with: 
          fetch-depth: 0
          submodules: true

      - name: validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: setup jdk ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'

      - name: make gradle wrapper executable
        run: chmod +x ./gradlew

      - name: build with gradle
        run: |
          ./gradlew build --stacktrace --no-daemon
#          if [ -z "${{ inputs.subproject }}" ]; then
#              ./gradlew build --stacktrace --no-daemon
#          else
#              args=$(echo "${{ inputs.subproject }}" | tr ',' '\n' | sed 's/$/:build/' | paste -sd ' ')
#              ./gradlew $args --stacktrace --no-daemon
#          fi
